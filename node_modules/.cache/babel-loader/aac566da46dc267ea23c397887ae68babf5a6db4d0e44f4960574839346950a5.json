{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\KKINI\\\\kkini-frontend\\\\src\\\\components\\\\Filters.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Filters({\n  items,\n  displayedItems,\n  setItems,\n  setDisplayItems\n}) {\n  _s();\n  const categories = [\"간식\", \"육가공\", \"음료\", \"즉석섭취식품\"];\n  const filters = [\"저칼로리\", \"슈가프리\", \"로우슈가\", \"저탄수화물\", \"키토\", \"트랜스지방\", \"고단백\", \"저나트륨\", \"포화지방\", \"저지방\"];\n  const kkinis = [\"끼니\", \"끼니 그린\"];\n  const SERVER_URL = \"http://localhost:8080\";\n  useEffect(() => {\n    console.log(\"Updated items:\", items);\n    console.log(\"Updated displayedItems:\", displayedItems);\n  }, [items, displayedItems]);\n  const handleKkiniChange = async (kkini, isChecked) => {\n    if (isChecked) {\n      try {\n        const response = await fetch(`${SERVER_URL}/search/kkini-products/${encodeURIComponent(kkini)}`);\n        if (!response.ok) {\n          throw new Error(`API call failed with status: ${response.status}`);\n        }\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          setItems(data);\n          setDisplayItems(data.slice(0, 5));\n        } else {\n          console.error(\"Expected an array but received:\", data);\n          setItems([]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching products by kkini type:\", error);\n      }\n    }\n  };\n  const handleCategoryChange = async (categoryName, isChecked) => {\n    if (isChecked) {\n      try {\n        const response = await fetch(`${SERVER_URL}/search/products/categoryChecked?categoryName=${categoryName}`);\n        const data = await response.json();\n        console.log(\"Data from handleCategoryChange:\", data); // <-- 추가된 코드\n        if (Array.isArray(data)) {\n          setItems(data);\n          setDisplayItems(data.slice(0, 10));\n        } else {\n          console.error(\"Expected an array but received:\", data);\n          setItems([]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching products by category:\", error);\n      }\n    }\n  };\n  const handleFilterChange = (filter, isChecked) => {\n    // 필터 변경 로직\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uB07C\\uB2C8 \\uC120\\uD0DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), kkinis.map(kkini => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-item\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: kkini,\n          onChange: e => handleKkiniChange(e.target.value, e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), kkini]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)\n    }, kkini, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uCE74\\uD14C\\uACE0\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-item\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: category,\n          onChange: e => handleCategoryChange(e.target.value, e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, category, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD544\\uD130\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), filters.map(filter => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-item\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: filter,\n          onChange: e => handleFilterChange(e.target.value, e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), filter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)\n    }, filter, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(Filters, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Filters;\n;\nexport default Filters;\nvar _c;\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Filters","items","displayedItems","setItems","setDisplayItems","_s","categories","filters","kkinis","SERVER_URL","console","log","handleKkiniChange","kkini","isChecked","response","fetch","encodeURIComponent","ok","Error","status","data","json","Array","isArray","slice","error","handleCategoryChange","categoryName","handleFilterChange","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","value","onChange","e","target","checked","category","_c","$RefreshReg$"],"sources":["D:/Study/KKINI/kkini-frontend/src/components/Filters.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nfunction Filters({ items, displayedItems, setItems, setDisplayItems}) {\r\n    const categories = [\"간식\", \"육가공\", \"음료\", \"즉석섭취식품\"];\r\n    const filters = [\"저칼로리\", \"슈가프리\", \"로우슈가\", \"저탄수화물\",\r\n        \"키토\", \"트랜스지방\", \"고단백\", \"저나트륨\", \"포화지방\", \"저지방\"];\r\n    const kkinis = [\"끼니\", \"끼니 그린\"];\r\n    const SERVER_URL = \"http://localhost:8080\";\r\n\r\n    useEffect(() => {\r\n        console.log(\"Updated items:\", items);\r\n        console.log(\"Updated displayedItems:\", displayedItems);\r\n    }, [items, displayedItems]);\r\n\r\n    const handleKkiniChange = async (kkini, isChecked) => {\r\n        if (isChecked) {\r\n            try {\r\n                const response =\r\n                    await fetch(`${SERVER_URL}/search/kkini-products/${encodeURIComponent(kkini)}`);\r\n                if (!response.ok) {\r\n                    throw new Error(`API call failed with status: ${response.status}`);\r\n                }\r\n                const data = await response.json();\r\n                if (Array.isArray(data)) {\r\n                    setItems(data);\r\n                    setDisplayItems(data.slice(0, 5));\r\n                } else {\r\n                    console.error(\"Expected an array but received:\", data);\r\n                    setItems([]);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching products by kkini type:\", error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleCategoryChange = async (categoryName, isChecked) => {\r\n        if (isChecked) {\r\n            try {\r\n                const response =\r\n                    await fetch(`${SERVER_URL}/search/products/categoryChecked?categoryName=${categoryName}`);\r\n                const data = await response.json();\r\n                console.log(\"Data from handleCategoryChange:\", data);  // <-- 추가된 코드\r\n                if (Array.isArray(data)) {\r\n                    setItems(data);\r\n                    setDisplayItems(data.slice(0, 10));\r\n                } else {\r\n                    console.error(\"Expected an array but received:\", data);\r\n                    setItems([]);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching products by category:\", error);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const handleFilterChange = (filter, isChecked) => {\r\n        // 필터 변경 로직\r\n    };\r\n\r\n    return (\r\n        <div className=\"filters\">\r\n            <h3>끼니 선택</h3>\r\n            {kkinis.map(kkini => (\r\n                <div key={kkini} className=\"filter-item\">\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            value={kkini}\r\n                            onChange={\r\n                                (e) => handleKkiniChange(e.target.value, e.target.checked)}\r\n                        />\r\n                        {kkini}\r\n                    </label>\r\n                </div>\r\n            ))}\r\n            <h3>카테고리</h3>\r\n            {categories.map(category => (\r\n                <div key={category} className=\"filter-item\">\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            value={category}\r\n                            onChange={(e) => handleCategoryChange(e.target.value, e.target.checked)}\r\n                        />\r\n                        {category}\r\n                    </label>\r\n                </div>\r\n            ))}\r\n            <h3>필터</h3>\r\n            {filters.map(filter => (\r\n                <div key={filter} className=\"filter-item\">\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            value={filter}\r\n                            onChange={(e) => handleFilterChange(e.target.value, e.target.checked)}\r\n                        />\r\n                        {filter}\r\n                    </label>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )};\r\n\r\n    export default Filters;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,OAAOA,CAAC;EAAEC,KAAK;EAAEC,cAAc;EAAEC,QAAQ;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAClE,MAAMC,UAAU,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC;EAChD,MAAMC,OAAO,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAC5C,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC;EAChD,MAAMC,MAAM,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC;EAC9B,MAAMC,UAAU,GAAG,uBAAuB;EAE1CZ,SAAS,CAAC,MAAM;IACZa,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEV,KAAK,CAAC;IACpCS,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAET,cAAc,CAAC;EAC1D,CAAC,EAAE,CAACD,KAAK,EAAEC,cAAc,CAAC,CAAC;EAE3B,MAAMU,iBAAiB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,SAAS,KAAK;IAClD,IAAIA,SAAS,EAAE;MACX,IAAI;QACA,MAAMC,QAAQ,GACV,MAAMC,KAAK,CAAE,GAAEP,UAAW,0BAAyBQ,kBAAkB,CAACJ,KAAK,CAAE,EAAC,CAAC;QACnF,IAAI,CAACE,QAAQ,CAACG,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAE,gCAA+BJ,QAAQ,CAACK,MAAO,EAAC,CAAC;QACtE;QACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClC,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;UACrBlB,QAAQ,CAACkB,IAAI,CAAC;UACdjB,eAAe,CAACiB,IAAI,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACrC,CAAC,MAAM;UACHf,OAAO,CAACgB,KAAK,CAAC,iCAAiC,EAAEL,IAAI,CAAC;UACtDlB,QAAQ,CAAC,EAAE,CAAC;QAChB;MACJ,CAAC,CAAC,OAAOuB,KAAK,EAAE;QACZhB,OAAO,CAACgB,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAClE;IACJ;EACJ,CAAC;EAED,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,YAAY,EAAEd,SAAS,KAAK;IAC5D,IAAIA,SAAS,EAAE;MACX,IAAI;QACA,MAAMC,QAAQ,GACV,MAAMC,KAAK,CAAE,GAAEP,UAAW,iDAAgDmB,YAAa,EAAC,CAAC;QAC7F,MAAMP,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClCZ,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEU,IAAI,CAAC,CAAC,CAAE;QACvD,IAAIE,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;UACrBlB,QAAQ,CAACkB,IAAI,CAAC;UACdjB,eAAe,CAACiB,IAAI,CAACI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACtC,CAAC,MAAM;UACHf,OAAO,CAACgB,KAAK,CAAC,iCAAiC,EAAEL,IAAI,CAAC;UACtDlB,QAAQ,CAAC,EAAE,CAAC;QAChB;MACJ,CAAC,CAAC,OAAOuB,KAAK,EAAE;QACZhB,OAAO,CAACgB,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAChE;IACJ;EACJ,CAAC;EAGD,MAAMG,kBAAkB,GAAGA,CAACC,MAAM,EAAEhB,SAAS,KAAK;IAC9C;EAAA,CACH;EAED,oBACIf,OAAA;IAAKgC,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACpBjC,OAAA;MAAAiC,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACb5B,MAAM,CAAC6B,GAAG,CAACxB,KAAK,iBACbd,OAAA;MAAiBgC,SAAS,EAAC,aAAa;MAAAC,QAAA,eACpCjC,OAAA;QAAAiC,QAAA,gBACIjC,OAAA;UACIuC,IAAI,EAAC,UAAU;UACfC,KAAK,EAAE1B,KAAM;UACb2B,QAAQ,EACHC,CAAC,IAAK7B,iBAAiB,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK,EAAEE,CAAC,CAACC,MAAM,CAACC,OAAO;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE,CAAC,EACDvB,KAAK;MAAA;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC,GATFvB,KAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUV,CACR,CAAC,eACFrC,OAAA;MAAAiC,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACZ9B,UAAU,CAAC+B,GAAG,CAACO,QAAQ,iBACpB7C,OAAA;MAAoBgC,SAAS,EAAC,aAAa;MAAAC,QAAA,eACvCjC,OAAA;QAAAiC,QAAA,gBACIjC,OAAA;UACIuC,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEK,QAAS;UAChBJ,QAAQ,EAAGC,CAAC,IAAKd,oBAAoB,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,EAAEE,CAAC,CAACC,MAAM,CAACC,OAAO;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3E,CAAC,EACDQ,QAAQ;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC,GARFQ,QAAQ;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASb,CACR,CAAC,eACFrC,OAAA;MAAAiC,QAAA,EAAI;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACV7B,OAAO,CAAC8B,GAAG,CAACP,MAAM,iBACf/B,OAAA;MAAkBgC,SAAS,EAAC,aAAa;MAAAC,QAAA,eACrCjC,OAAA;QAAAiC,QAAA,gBACIjC,OAAA;UACIuC,IAAI,EAAC,UAAU;UACfC,KAAK,EAAET,MAAO;UACdU,QAAQ,EAAGC,CAAC,IAAKZ,kBAAkB,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK,EAAEE,CAAC,CAACC,MAAM,CAACC,OAAO;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE,CAAC,EACDN,MAAM;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC,GARFN,MAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASX,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AACT;AAAC/B,EAAA,CAtGGL,OAAO;AAAA6C,EAAA,GAAP7C,OAAO;AAsGV;AAEF,eAAeA,OAAO;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}