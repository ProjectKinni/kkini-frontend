{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\KKINI\\\\kkini-frontend\\\\src\\\\pages\\\\SearchResultPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport '../styles/SearchResultPage.css';\nimport Header from \"../components/Header\";\nimport Filters from \"../components/Filters\";\nimport ProductList from \"../components/ProductList\";\nimport Footer from \"../components/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = \"http://localhost:8080\";\nfunction SearchResultPage() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [autocompleteItems, setAutocompleteItems] = useState([]);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const searchName = searchParams.get('name') || '';\n  const navigate = useNavigate();\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [selectedFilters, setSelectedFilters] = useState([]);\n  const [items, setItems] = useState([]);\n  const [displayedItems, setDisplayItems] = useState([]);\n  const categoryName = searchParams.get('categoryName') || '';\n  useEffect(() => {\n    let endpoint = `${SERVER_URL}/search/products?`;\n    if (searchName) {\n      endpoint += `productName=${searchName}&`; // '&' 추가\n    }\n\n    if (categoryName) {\n      endpoint += `categoryName=${categoryName}`;\n    }\n    fetch(endpoint).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      if (Array.isArray(data)) {\n        const transformedData = data.map(item => ({\n          ...item,\n          isKkini: !!item.isKkini\n        }));\n        setItems(transformedData);\n        setDisplayItems(transformedData);\n      } else {\n        console.error(\"Expected an array but received:\", data);\n        setItems([]);\n        setDisplayItems([]);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching products:\", error);\n    });\n  }, [searchName, categoryName]);\n  useEffect(() => {\n    let filteredItems = items;\n\n    // 끼니 그린 체크리스트 확인\n    if (selectedCategories.includes(\"끼니 그린\")) {\n      filteredItems = filteredItems.filter(item => !item.isKkini); // isKkini가 false인 경우만 필터링\n    } else if (selectedCategories.includes(\"끼니\")) {\n      filteredItems = filteredItems.filter(item => item.isKkini); // isKkini가 true인 경우만 필터링\n    }\n\n    // 다른 카테고리와 필터로 추가 필터링\n    filteredItems = filteredItems.filter(item => (selectedCategories.length === 0 || selectedCategories.includes(item.category)) && selectedFilters.every(filter => item.filters && item.filters.includes(filter)));\n    setDisplayItems(filteredItems);\n  }, [items, selectedCategories, selectedFilters]);\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n    navigate(`${SERVER_URL}/search-results?name=${searchTerm}`);\n  };\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setSearchTerm(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-result-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      searchTerm: searchTerm,\n      setSearchTerm: setSearchTerm,\n      autocompleteItems: autocompleteItems,\n      setAutocompleteItems: setAutocompleteItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Filters, {\n        items: items,\n        setDisplayItems: setDisplayItems,\n        searchName: searchName,\n        setItems: setItems,\n        onCategoryChange: (category, isChecked) => {\n          if (isChecked) {\n            setSelectedCategories(prev => {\n              const updatedCategories = [...prev, category];\n              console.log(\"Updated selected categories:\", updatedCategories); // 업데이트된 카테고리 출력\n              return updatedCategories;\n            });\n          } else {\n            setSelectedCategories(prev => prev.filter(c => c !== category));\n          }\n        },\n        selectedCategories: selectedCategories,\n        selectedFilters: selectedFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n        items: displayedItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n_s(SearchResultPage, \"cmwnQCxGfullQul9aqFEh+PTo4U=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = SearchResultPage;\nexport default SearchResultPage;\nvar _c;\n$RefreshReg$(_c, \"SearchResultPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","Header","Filters","ProductList","Footer","jsxDEV","_jsxDEV","SERVER_URL","SearchResultPage","_s","searchTerm","setSearchTerm","autocompleteItems","setAutocompleteItems","location","searchParams","URLSearchParams","search","searchName","get","navigate","selectedCategories","setSelectedCategories","selectedFilters","setSelectedFilters","items","setItems","displayedItems","setDisplayItems","categoryName","endpoint","fetch","then","response","ok","Error","json","data","Array","isArray","transformedData","map","item","isKkini","console","error","catch","filteredItems","includes","filter","length","category","every","filters","handleSearchSubmit","e","preventDefault","handleInputChange","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCategoryChange","isChecked","prev","updatedCategories","log","c","_c","$RefreshReg$"],"sources":["D:/Study/KKINI/kkini-frontend/src/pages/SearchResultPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport '../styles/SearchResultPage.css';\r\nimport Header from \"../components/Header\";\r\nimport Filters from \"../components/Filters\";\r\nimport ProductList from \"../components/ProductList\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst SERVER_URL = \"http://localhost:8080\";\r\n\r\nfunction SearchResultPage() {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [autocompleteItems, setAutocompleteItems] = useState([]);\r\n    const location = useLocation();\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const searchName = searchParams.get('name') || '';\r\n    const navigate = useNavigate();\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n    const [selectedFilters, setSelectedFilters] = useState([]);\r\n    const [items, setItems] = useState([]);\r\n    const [displayedItems, setDisplayItems] = useState([]);\r\n\r\n    const categoryName = searchParams.get('categoryName') || '';\r\n\r\n    useEffect(() => {\r\n        let endpoint = `${SERVER_URL}/search/products?`;\r\n        if (searchName) {\r\n            endpoint += `productName=${searchName}&`;  // '&' 추가\r\n        }\r\n        if (categoryName) {\r\n            endpoint += `categoryName=${categoryName}`;\r\n        }\r\n\r\n        fetch(endpoint)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                if (Array.isArray(data)) {\r\n                    const transformedData = data.map(item => ({\r\n                        ...item,\r\n                        isKkini: !!item.isKkini\r\n                    }));\r\n                    setItems(transformedData);\r\n                    setDisplayItems(transformedData);\r\n                } else {\r\n                    console.error(\"Expected an array but received:\", data);\r\n                    setItems([]);\r\n                    setDisplayItems([]);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error fetching products:\", error);\r\n            });\r\n    }, [searchName, categoryName]);\r\n\r\n    useEffect(() => {\r\n        let filteredItems = items;\r\n\r\n        // 끼니 그린 체크리스트 확인\r\n        if (selectedCategories.includes(\"끼니 그린\")) {\r\n            filteredItems = filteredItems.filter(item => !item.isKkini); // isKkini가 false인 경우만 필터링\r\n        } else if (selectedCategories.includes(\"끼니\")) {\r\n            filteredItems = filteredItems.filter(item => item.isKkini); // isKkini가 true인 경우만 필터링\r\n        }\r\n\r\n        // 다른 카테고리와 필터로 추가 필터링\r\n        filteredItems = filteredItems.filter(item =>\r\n            (selectedCategories.length === 0 || selectedCategories.includes(item.category)) &&\r\n            selectedFilters.every(filter => item.filters && item.filters.includes(filter))\r\n        );\r\n\r\n        setDisplayItems(filteredItems);\r\n    }, [items, selectedCategories, selectedFilters]);\r\n\r\n    const handleSearchSubmit = (e) => {\r\n        e.preventDefault();\r\n        navigate(`${SERVER_URL}/search-results?name=${searchTerm}`);\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const value = e.target.value;\r\n        setSearchTerm(value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-result-page\">\r\n            <Header\r\n                searchTerm={searchTerm}\r\n                setSearchTerm={setSearchTerm}\r\n                autocompleteItems={autocompleteItems}\r\n                setAutocompleteItems={setAutocompleteItems}\r\n            />\r\n            <div className=\"content-wrapper\">\r\n                <Filters\r\n                    items={items}\r\n                    setDisplayItems={setDisplayItems}\r\n                    searchName={searchName}\r\n                    setItems={setItems}\r\n                    onCategoryChange={(category, isChecked) => {\r\n                        if (isChecked) {\r\n                            setSelectedCategories(prev => {\r\n                                const updatedCategories = [...prev, category];\r\n                                console.log(\"Updated selected categories:\", updatedCategories); // 업데이트된 카테고리 출력\r\n                                return updatedCategories;\r\n                            });\r\n                        } else {\r\n                            setSelectedCategories(prev => prev.filter(c => c !== category));\r\n                        }\r\n                    }}\r\n                    selectedCategories={selectedCategories}\r\n                    selectedFilters={selectedFilters}\r\n                />\r\n                <ProductList items={displayedItems} />\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchResultPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}