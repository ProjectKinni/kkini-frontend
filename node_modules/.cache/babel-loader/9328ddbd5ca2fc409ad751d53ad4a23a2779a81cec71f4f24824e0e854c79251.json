{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\KKINI\\\\kkini-frontend\\\\src\\\\pages\\\\SearchResultPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport '../styles/SearchResultPage.css';\nimport Header from \"../components/Header\";\nimport Filters from \"../components/Filters\";\nimport ProductList from \"../components/ProductList\";\nimport Footer from \"../components/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = \"http://localhost:8080\";\nfunction SearchResultPage() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [autocompleteItems, setAutocompleteItems] = useState([]);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const searchName = searchParams.get('name') || '';\n  const navigate = useNavigate();\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [selectedFilters, setSelectedFilters] = useState([]);\n  const [items, setItems] = useState([]);\n  const [displayedItems, setDisplayItems] = useState([]);\n  useEffect(() => {\n    if (searchName) {\n      fetch(`${SERVER_URL}/search/products?name=${searchName}`).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(data => {\n        if (Array.isArray(data)) {\n          setItems(data);\n          setDisplayItems(data); // 초기 검색 결과를 displayedItems에 설정합니다.\n        } else {\n          console.error(\"Expected an array but received:\", data);\n          setItems([]);\n          setDisplayItems([]);\n        }\n      }).catch(error => {\n        console.error(\"Error fetching products:\", error);\n      });\n    }\n  }, [searchName]);\n  useEffect(() => {\n    let filteredItems = items;\n\n    // 끼니 그린 체크리스트 확인\n    if (selectedCategories.includes(\"끼니 그린\")) {\n      filteredItems = filteredItems.filter(item => !item.isKkini); // isKkini가 false인 경우만 필터링\n    } else if (selectedCategories.includes(\"끼니\")) {\n      filteredItems = filteredItems.filter(item => item.isKkini); // isKkini가 true인 경우만 필터링\n    }\n\n    // 다른 카테고리와 필터로 추가 필터링\n    filteredItems = filteredItems.filter(item => (selectedCategories.length === 0 || selectedCategories.includes(item.category)) && selectedFilters.every(filter => item.filters && item.filters.includes(filter)));\n    setDisplayItems(filteredItems);\n  }, [items, selectedCategories, selectedFilters]);\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n    navigate(`${SERVER_URL}/search-results?name=${searchTerm}`);\n  };\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setSearchTerm(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-result-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      searchTerm: searchTerm,\n      setSearchTerm: setSearchTerm,\n      autocompleteItems: autocompleteItems,\n      setAutocompleteItems: setAutocompleteItems,\n      handleSearchSubmit: handleSearchSubmit,\n      handleInputChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Filters, {\n        items: items,\n        setDisplayItems: setDisplayItems,\n        searchName: searchName,\n        setItems: setItems,\n        onCategoryChange: (category, isChecked) => {\n          if (isChecked) {\n            setSelectedCategories(prev => [...prev, category]);\n          } else {\n            setSelectedCategories(prev => prev.filter(c => c !== category));\n          }\n        },\n        onFilterChange: (filter, isChecked) => {\n          if (isChecked) {\n            setSelectedFilters(prev => [...prev, filter]);\n          } else {\n            setSelectedFilters(prev => prev.filter(f => f !== filter));\n          }\n        },\n        selectedCategories: selectedCategories,\n        selectedFilters: selectedFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n        items: displayedItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(SearchResultPage, \"cmwnQCxGfullQul9aqFEh+PTo4U=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = SearchResultPage;\nexport default SearchResultPage;\nvar _c;\n$RefreshReg$(_c, \"SearchResultPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","Header","Filters","ProductList","Footer","jsxDEV","_jsxDEV","SERVER_URL","SearchResultPage","_s","searchTerm","setSearchTerm","autocompleteItems","setAutocompleteItems","location","searchParams","URLSearchParams","search","searchName","get","navigate","selectedCategories","setSelectedCategories","selectedFilters","setSelectedFilters","items","setItems","displayedItems","setDisplayItems","fetch","then","response","ok","Error","json","data","Array","isArray","console","error","catch","filteredItems","includes","filter","item","isKkini","length","category","every","filters","handleSearchSubmit","e","preventDefault","handleInputChange","value","target","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCategoryChange","isChecked","prev","c","onFilterChange","f","_c","$RefreshReg$"],"sources":["D:/Study/KKINI/kkini-frontend/src/pages/SearchResultPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport '../styles/SearchResultPage.css';\r\nimport Header from \"../components/Header\";\r\nimport Filters from \"../components/Filters\";\r\nimport ProductList from \"../components/ProductList\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst SERVER_URL = \"http://localhost:8080\";\r\n\r\nfunction SearchResultPage() {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [autocompleteItems, setAutocompleteItems] = useState([]);\r\n    const location = useLocation();\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const searchName = searchParams.get('name') || '';\r\n    const navigate = useNavigate();\r\n    const [selectedCategories, setSelectedCategories] = useState([]);\r\n    const [selectedFilters, setSelectedFilters] = useState([]);\r\n    const [items, setItems] = useState([]);\r\n    const [displayedItems, setDisplayItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (searchName) {\r\n            fetch(`${SERVER_URL}/search/products?name=${searchName}`)\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error('Network response was not ok');\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    if (Array.isArray(data)) {\r\n                        setItems(data);\r\n                        setDisplayItems(data);  // 초기 검색 결과를 displayedItems에 설정합니다.\r\n                    } else {\r\n                        console.error(\"Expected an array but received:\", data);\r\n                        setItems([]);\r\n                        setDisplayItems([]);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error(\"Error fetching products:\", error);\r\n                });\r\n        }\r\n    }, [searchName]);\r\n\r\n    useEffect(() => {\r\n        let filteredItems = items;\r\n\r\n        // 끼니 그린 체크리스트 확인\r\n        if (selectedCategories.includes(\"끼니 그린\")) {\r\n            filteredItems = filteredItems.filter(item => !item.isKkini); // isKkini가 false인 경우만 필터링\r\n        } else if (selectedCategories.includes(\"끼니\")) {\r\n            filteredItems = filteredItems.filter(item => item.isKkini); // isKkini가 true인 경우만 필터링\r\n        }\r\n\r\n        // 다른 카테고리와 필터로 추가 필터링\r\n        filteredItems = filteredItems.filter(item =>\r\n            (selectedCategories.length === 0 || selectedCategories.includes(item.category)) &&\r\n            selectedFilters.every(filter => item.filters && item.filters.includes(filter))\r\n        );\r\n\r\n        setDisplayItems(filteredItems);\r\n    }, [items, selectedCategories, selectedFilters]);\r\n\r\n    const handleSearchSubmit = (e) => {\r\n        e.preventDefault();\r\n        navigate(`${SERVER_URL}/search-results?name=${searchTerm}`);\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const value = e.target.value;\r\n        setSearchTerm(value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-result-page\">\r\n            <Header\r\n                searchTerm={searchTerm}\r\n                setSearchTerm={setSearchTerm}\r\n                autocompleteItems={autocompleteItems}\r\n                setAutocompleteItems={setAutocompleteItems}\r\n                handleSearchSubmit={handleSearchSubmit}\r\n                handleInputChange={handleInputChange}\r\n            />\r\n            <div className=\"content-wrapper\">\r\n                <Filters\r\n                    items={items}\r\n                    setDisplayItems={setDisplayItems}\r\n                    searchName={searchName}\r\n                    setItems={setItems}\r\n                    onCategoryChange={(category, isChecked) => {\r\n                        if (isChecked) {\r\n                            setSelectedCategories(prev => [...prev, category]);\r\n                        } else {\r\n                            setSelectedCategories(prev => prev.filter(c => c !== category));\r\n                        }\r\n                    }}\r\n                    onFilterChange={(filter, isChecked) => {\r\n                        if (isChecked) {\r\n                            setSelectedFilters(prev => [...prev, filter]);\r\n                        } else {\r\n                            setSelectedFilters(prev => prev.filter(f => f !== filter));\r\n                        }\r\n                    }}\r\n                    selectedCategories={selectedCategories}\r\n                    selectedFilters={selectedFilters}\r\n                />\r\n                <ProductList items={displayedItems} />\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchResultPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}