[{"/Users/doma/Projects/ProjectKinni/kinni-frontend/src/index.js":"1","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/reportWebVitals.js":"2","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/App.js":"3","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/pages/MainPage.js":"4","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/Header.js":"5","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/pages/SearchResultPage.js":"6","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/pages/ProductDetailPage.js":"7","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/ProductList.js":"8","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/Footer.js":"9","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/RankingSection.js":"10","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/Filters.js":"11","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/BannerAd.js":"12","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/NavigationBar.js":"13","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/ProductNutrition.js":"14","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/ProductDetail.js":"15","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/pages/UserInfoPage.js":"16","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/pages/LoginPage.js":"17","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/KkiniChecked.js":"18","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/Categories.js":"19","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/GetUserInfo.js":"20","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/Logout.js":"21"},{"size":513,"mtime":1692866385391,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1692688162183,"results":"24","hashOfConfig":"23"},{"size":863,"mtime":1693894739658,"results":"25","hashOfConfig":"23"},{"size":908,"mtime":1693894603396,"results":"26","hashOfConfig":"23"},{"size":4939,"mtime":1693986842872,"results":"27","hashOfConfig":"23"},{"size":8595,"mtime":1693984226572,"results":"28","hashOfConfig":"23"},{"size":1994,"mtime":1693894739660,"results":"29","hashOfConfig":"23"},{"size":920,"mtime":1693984226572,"results":"30","hashOfConfig":"23"},{"size":990,"mtime":1693894603394,"results":"31","hashOfConfig":"23"},{"size":1102,"mtime":1693894603395,"results":"32","hashOfConfig":"23"},{"size":1567,"mtime":1693984226571,"results":"33","hashOfConfig":"23"},{"size":406,"mtime":1693894603394,"results":"34","hashOfConfig":"23"},{"size":338,"mtime":1693894603395,"results":"35","hashOfConfig":"23"},{"size":1466,"mtime":1693984226572,"results":"36","hashOfConfig":"23"},{"size":962,"mtime":1693894603395,"results":"37","hashOfConfig":"23"},{"size":1135,"mtime":1693894739660,"results":"38","hashOfConfig":"23"},{"size":761,"mtime":1693894739660,"results":"39","hashOfConfig":"23"},{"size":599,"mtime":1693894739660,"results":"40","hashOfConfig":"23"},{"size":1925,"mtime":1693894739659,"results":"41","hashOfConfig":"23"},{"size":839,"mtime":1694146863978,"results":"42","hashOfConfig":"23"},{"size":461,"mtime":1693894739660,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1uh7g0s",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/doma/Projects/ProjectKinni/kinni-frontend/src/index.js",[],[],[],"/Users/doma/Projects/ProjectKinni/kinni-frontend/src/reportWebVitals.js",[],[],"/Users/doma/Projects/ProjectKinni/kinni-frontend/src/App.js",[],[],"/Users/doma/Projects/ProjectKinni/kinni-frontend/src/pages/MainPage.js",[],[],"/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/Header.js",["111","112","113","114","115","116","117","118","119"],[],"/Users/doma/Projects/ProjectKinni/kinni-frontend/src/pages/SearchResultPage.js",["120","121","122"],[],"import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport '../styles/SearchResultPage.css';\nimport Header from \"../components/Header\";\nimport Filters from \"../components/Filters\";\nimport ProductList from \"../components/ProductList\";\nimport KkiniChecked from \"../components/KkiniChecked\";\nimport Footer from \"../components/Footer\";\nimport Categories from \"../components/Categories\";\n\nconst SERVER_URL = \"http://localhost:8080\";\n\nfunction SearchResultPage({ searchResults }) {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [autocompleteItems, setAutocompleteItems] = useState([]);\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n    const searchTermFromParams = searchParams.get('searchTerm') || '';\n    const navigate = useNavigate();\n    const [items, setItems] = useState([]);\n    const [error, setError] = useState(null);\n    const [selectedCategories, setSelectedCategories] = useState([]);\n    const [isChecked, setIsChecked] = useState(false);\n    const [isLowCalorie, setIsLowCalorie] = useState(false);\n    const [isSugarFree, setIsSugarFree] = useState(false);\n    const [isLowSugar, setIsLowSugar] = useState(false);\n    const [isLowCarb, setIsLowCarb] = useState(false);\n    const [isKeto, setIsKeto] = useState(false);\n    const [isTransFat, setIsTransFat] = useState(false);\n    const [isHighProtein, setIsHighProtein] = useState(false);\n    const [isLowSodium, setIsLowSodium] = useState(false);\n    const [isCholesterol, setIsCholesterol] = useState(false);\n    const [isSaturatedFat, setIsSaturatedFat] = useState(false);\n    const [isLowFat, setIsLowFat] = useState(false);\n\n    useEffect(() => {\n        console.log(\"필터 업데이트~~~~~:\", searchResults);\n    }, [searchResults]);\n\n    useEffect(() => {\n        let endpoint = `${SERVER_URL}/api/products/search?searchTerm=${searchTermFromParams}`;\n\n        if (isChecked) {\n            endpoint += `&isGreen=true`;\n        }\n\n        if (selectedCategories.length > 0) {\n            console.log(selectedCategories);\n            endpoint += `&categoryName=${selectedCategories.join(\",\")}`;\n        }\n\n        if (isLowCalorie) {\n            endpoint += `&isLowCalorie=true`;\n        }\n\n        if (isSugarFree) {\n            endpoint += `&isSugarFree=true`;\n        }\n        if (isLowSugar) {\n            endpoint += `&isLowSugar=true`;\n        }\n        if (isLowCarb) {\n            endpoint += `&isLowCarb=true`;\n        }\n        if (isKeto) {\n            endpoint += `&isKeto=true`;\n        }\n        if (isTransFat) {\n            endpoint += `&isTransFat=true`;\n        }\n        if (isHighProtein) {\n            endpoint += `&isHighProtein=true`;\n        }\n        if (isLowSodium) {\n            endpoint += `&isLowSodium=true`;\n        }\n        if (isCholesterol) {\n            endpoint += `&isCholesterol=true`;\n        }\n        if (isSaturatedFat) {\n            endpoint += `&isSaturatedFat=true`;\n        }\n        if (isLowFat) {\n            endpoint += `&isLowFat=true`;\n        }\n\n        console.log(\"마지막 엔드포인트 ~~~ :\", endpoint);\n\n        fetch(endpoint)\n            .then(response => {\n                if (!response.ok) {\n                    return response.text().then(text => {\n                        console.error(\"Server Error:\", text);\n                        throw new Error('Network response was not ok');\n                    });\n                }\n                return response.json();\n            })\n            .then(data => {\n                console.log(\"Fetched Data:\", data);\n                if (data.message) {\n                    setError(data.message);\n                    setItems([]);\n                } else if (Array.isArray(data)) {\n                    setItems(data);\n                } else {\n                    const errorMsg = \"Unexpected response format.\";\n                    setError(errorMsg);\n                    setItems([]);\n                }\n            })\n            .catch(error => {\n                setError(error.message || \"Error fetching products.\");\n            });\n    }, [searchTermFromParams, selectedCategories, isChecked, isLowCalorie, isSugarFree, isLowSugar,\n        isLowCarb, isKeto, isTransFat, isHighProtein, isLowSodium, isCholesterol, isSaturatedFat, isLowFat]);\n    const handleKkiniChecked = (checkedValue) => {\n        setIsChecked(checkedValue);\n    }\n\n    const handleLowCalorieChange = (e) => {\n        setIsLowCalorie(e.target.checked);\n    };\n\n    const handleSugarFreeChange = (e) => {\n        setIsSugarFree(e.target.checked);\n    };\n\n    const handleLowSugarChange = (e) => {\n        setIsLowSugar(e.target.checked);\n    };\n\n    const handleLowCarbChange = (e) => {\n        setIsLowCarb(e.target.checked);\n    };\n\n    const handleKetoChange = (e) => {\n        setIsKeto(e.target.checked);\n    };\n\n    const handleTransFatChange = (e) => {\n        setIsTransFat(e.target.checked);\n    };\n\n    const handleHighProteinChange = (e) => {\n        setIsHighProtein(e.target.checked);\n    };\n\n    const handleLowSodiumChange = (e) => {\n        setIsLowSodium(e.target.checked);\n    };\n\n    const handleCholesterolChange = (e) => {\n        setIsCholesterol(e.target.checked);\n    };\n\n    const handleSaturatedFatChange = (e) => {\n        setIsSaturatedFat(e.target.checked);\n    };\n\n    const handleLowFatChange = (e) => {\n        setIsLowFat(e.target.checked);\n    };\n\n    const handleInputChange = (e) => {\n        const value = e.target.value;\n        setSearchTerm(value);\n    };\n\n    useEffect(() => {\n        const categoryNamesFromParams = searchParams.getAll('categoryName');\n        if (categoryNamesFromParams.length > 0) {\n            setSelectedCategories(categoryNamesFromParams);\n        }\n    }, [location.search]);\n\n    const categoryGroups = items.reduce((groups, item) => {\n        const category = item.categoryName || 'Others';\n        if (!groups[category]) {\n            groups[category] = [];\n        }\n        groups[category].push(item);\n        return groups;\n    }, {});\n\n    return (\n        <div className=\"search-result-page\">\n            <Header\n                searchTerm={searchTerm}\n                setSearchTerm={setSearchTerm}\n                autocompleteItems={autocompleteItems}\n                setAutocompleteItems={setAutocompleteItems}\n            />\n            <div className=\"content-wrapper\">\n                {error ? (\n                    <div className=\"error-message\">\n                        {error}\n                    </div>\n                ) : (\n                    <>\n                        <div className=\"left-sidebar\">\n                            <KkiniChecked onKkiniChecked={handleKkiniChecked}/>\n                            <Categories\n                                onCategoryChange={setSelectedCategories}\n                                selected={selectedCategories}\n                                location={location}\n                                searchParams={searchParams}\n                            />\n                            <Filters\n                                items={items}\n                                searchName={searchTermFromParams}\n                                setItems={setItems}\n                                onLowCalorieChange={handleLowCalorieChange}\n                                onSugarFreeChange={handleSugarFreeChange}\n                                onLowSugarChange={handleLowSugarChange}\n                                onLowCarbChange={handleLowCarbChange}\n                                onKetoChange={handleKetoChange}\n                                onTransFatChange={handleTransFatChange}\n                                onHighProteinChange={handleHighProteinChange}\n                                onLowSodiumChange={handleLowSodiumChange}\n                                onCholesterolChange={handleCholesterolChange}\n                                onSaturatedFatChange={handleSaturatedFatChange}\n                                onLowFatChange={handleLowFatChange}\n                            />\n                        </div>\n                        {Object.keys(categoryGroups).map(category => (\n                            <div key={category}>\n                                <h2>{category}</h2>\n                                <ProductList items={categoryGroups[category]} />\n                            </div>\n                        ))}\n                    </>\n                )}\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\nexport default SearchResultPage;","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/pages/ProductDetailPage.js",["123","124","125","126","127","128","129","130","131"],[],"// ProductDetailPage.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport ProductDetail from '../components/ProductDetail';\nimport Header from \"../components/Header\";\nimport Filters from \"../components/Filters\";\nimport ProductList from \"../components/ProductList\";\nimport \"../styles/ProductDetail.css\"\nimport NavigationBar from \"../components/NavigationBar\";\nimport ProductNutrition from \"../components/ProductNutrition\";\n\nconst SERVER_URL = \"http://localhost:8080\";\n\nconst ProductDetailPage = () => {\n    const { productId } = useParams();\n    const location = useLocation();\n    const searchParams = new URLSearchParams(location.search);\n    const searchTermFromParams = searchParams.get('searchTerm') || '';\n\n    const [product, setProduct] = useState(null);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [autocompleteItems, setAutocompleteItems] = useState([]);\n    const [items, setItems] = useState([]);\n    const [displayedItems, setDisplayItems] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetch(`${SERVER_URL}/api/search/products/${productId}`)\n            .then(response => response.json())\n            .then(data => setProduct(data))\n            .catch(error => {\n                console.error('Error fetching product:', error);\n                setError(error.message || \"Error fetching product.\");\n            });\n    }, [productId]);\n\n    return (\n        <div className=\"product-detail-page\">\n            <Header\n                searchTerm={searchTerm}\n                setSearchTerm={setSearchTerm}\n                autocompleteItems={autocompleteItems}\n                setAutocompleteItems={setAutocompleteItems}\n            />\n            <NavigationBar/>\n            <ProductDetail product={product} />\n            <h1>제품설명&상세정보</h1>\n            <h1>리뷰~!</h1>\n            </div>\n    );\n}\n\nexport default ProductDetailPage;\n","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/ProductList.js",[],[],"/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/Footer.js",[],[],"/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/RankingSection.js",[],[],"/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/Filters.js",[],[],"/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/BannerAd.js",[],[],"/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/NavigationBar.js",[],[],"/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/ProductNutrition.js",[],[],"/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/ProductDetail.js",[],[],"/Users/doma/Projects/ProjectKinni/kinni-frontend/src/pages/UserInfoPage.js",[],[],"/Users/doma/Projects/ProjectKinni/kinni-frontend/src/pages/LoginPage.js",[],[],"/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/KkiniChecked.js",[],[],"/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/Categories.js",["132"],[],"import React, {useEffect} from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nfunction Categories({ onCategoryChange, selected, location, searchParams }) {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const categoryNamesFromParams = searchParams.getAll('categoryName');\n        if (categoryNamesFromParams.length > 0) {\n            onCategoryChange(categoryNamesFromParams);\n        }\n    }, [location.search]);\n\n    const handleCategoryChange = (e) => {\n        const category = e.target.value;\n        let updatedCategories;\n        if (e.target.checked) {\n            updatedCategories = [...selected, category];\n        } else {\n            updatedCategories = selected.filter(cat => cat !== category);\n        }\n\n        onCategoryChange(updatedCategories);\n\n        // Update URL params\n        searchParams.delete('categoryName'); // 기존의 카테고리 삭제\n        updatedCategories.forEach(cat => {\n            searchParams.append('categoryName', cat); // 새로 업데이트된 카테고리 추가\n        });\n        navigate({\n            pathname: location.pathname,\n            search: searchParams.toString()\n        });\n    }\n\n    const categories = [\"간식\", \"육가공\", \"음료\", \"즉석섭취식품\"];\n\n    return (\n        <div className=\"category-selection\">\n            <h3>카테고리</h3>\n            {categories.map(category => (\n                <div key={category} className=\"category-selection-item\">\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            value={category}\n                            onChange={handleCategoryChange}\n                            checked={selected.includes(category)}\n                        />\n                        {category}\n                    </label>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default Categories;","/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/GetUserInfo.js",[],[],"/Users/doma/Projects/ProjectKinni/kinni-frontend/src/components/Logout.js",[],[],{"ruleId":"133","severity":1,"message":"134","line":33,"column":8,"nodeType":"135","endLine":33,"endColumn":10,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":86,"column":11,"nodeType":"139","messageId":"140","endLine":86,"endColumn":26},{"ruleId":"141","severity":1,"message":"142","line":123,"column":17,"nodeType":"143","endLine":123,"endColumn":29},{"ruleId":"141","severity":1,"message":"142","line":124,"column":17,"nodeType":"143","endLine":124,"endColumn":29},{"ruleId":"141","severity":1,"message":"142","line":125,"column":17,"nodeType":"143","endLine":125,"endColumn":29},{"ruleId":"141","severity":1,"message":"142","line":131,"column":21,"nodeType":"143","endLine":131,"endColumn":65},{"ruleId":"141","severity":1,"message":"142","line":133,"column":21,"nodeType":"143","endLine":133,"endColumn":67},{"ruleId":"141","severity":1,"message":"142","line":135,"column":17,"nodeType":"143","endLine":135,"endColumn":29},{"ruleId":"141","severity":1,"message":"142","line":136,"column":17,"nodeType":"143","endLine":136,"endColumn":29},{"ruleId":"137","severity":1,"message":"144","line":19,"column":11,"nodeType":"139","messageId":"140","endLine":19,"endColumn":19},{"ruleId":"137","severity":1,"message":"145","line":165,"column":11,"nodeType":"139","messageId":"140","endLine":165,"endColumn":28},{"ruleId":"133","severity":1,"message":"146","line":175,"column":8,"nodeType":"135","endLine":175,"endColumn":25,"suggestions":"147"},{"ruleId":"137","severity":1,"message":"148","line":6,"column":8,"nodeType":"139","messageId":"140","endLine":6,"endColumn":15},{"ruleId":"137","severity":1,"message":"149","line":7,"column":8,"nodeType":"139","messageId":"140","endLine":7,"endColumn":19},{"ruleId":"137","severity":1,"message":"150","line":10,"column":8,"nodeType":"139","messageId":"140","endLine":10,"endColumn":24},{"ruleId":"137","severity":1,"message":"151","line":18,"column":11,"nodeType":"139","messageId":"140","endLine":18,"endColumn":31},{"ruleId":"137","severity":1,"message":"152","line":23,"column":12,"nodeType":"139","messageId":"140","endLine":23,"endColumn":17},{"ruleId":"137","severity":1,"message":"153","line":23,"column":19,"nodeType":"139","messageId":"140","endLine":23,"endColumn":27},{"ruleId":"137","severity":1,"message":"154","line":24,"column":12,"nodeType":"139","messageId":"140","endLine":24,"endColumn":26},{"ruleId":"137","severity":1,"message":"155","line":24,"column":28,"nodeType":"139","messageId":"140","endLine":24,"endColumn":43},{"ruleId":"137","severity":1,"message":"156","line":25,"column":12,"nodeType":"139","messageId":"140","endLine":25,"endColumn":17},{"ruleId":"133","severity":1,"message":"157","line":12,"column":8,"nodeType":"135","endLine":12,"endColumn":25,"suggestions":"158"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAutocompleteItems'. Either include it or remove the dependency array. If 'setAutocompleteItems' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["159"],"no-unused-vars","'handleItemClick' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'navigate' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'searchParams'. Either include it or remove the dependency array.",["160"],"'Filters' is defined but never used.","'ProductList' is defined but never used.","'ProductNutrition' is defined but never used.","'searchTermFromParams' is assigned a value but never used.","'items' is assigned a value but never used.","'setItems' is assigned a value but never used.","'displayedItems' is assigned a value but never used.","'setDisplayItems' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onCategoryChange' and 'searchParams'. Either include them or remove the dependency array. If 'onCategoryChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["161"],{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [setAutocompleteItems]",{"range":"168","text":"169"},"Update the dependencies array to be: [location.search, searchParams]",{"range":"170","text":"171"},"Update the dependencies array to be: [location.search, onCategoryChange, searchParams]",{"range":"172","text":"173"},[1221,1223],"[setAutocompleteItems]",[5777,5794],"[location.search, searchParams]",[425,442],"[location.search, onCategoryChange, searchParams]"]